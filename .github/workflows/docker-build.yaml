name: Build, Test and Push Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/core-lane

jobs:
  # Integration testing job
  integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Run Rustfmt
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
        
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Docker
        uses: docker/setup-buildx-action@v3

      - name: Install required system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq bc lsof

      - name: Build Core Lane node
        run: |
          cargo build

      - name: Make test scripts executable
        run: |
          chmod +x tests/*.sh

      - name: Run integration tests
        run: |
          ./tests/integration_test.sh
        env:
          RUST_LOG: info

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            /tmp/core_lane_node_output
            /tmp/core_lane_node_rpc_output
            /tmp/core_lane_test_output
          retention-days: 7

  # Build and push Docker image job
  build:
    runs-on: ubuntu-latest
    needs: integration-test
    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Depot
        uses: depot/setup-action@v1

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: depot/build-push-action@v1
        with:
          project: 5p2fmz72v3
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ github.repository }}/core-lane:latest